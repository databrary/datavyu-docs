.. _api-add-arguments:
.. _api-add-code:
.. _api-add-codes:

=====================
Add Codes to a Column
=====================

.. default-domain:: rb

.. begin-content

Adding codes to a column is among the most straightforward 
scriptable tasks. The Datavyu API provides the :meth:`add_code()` method
for adding codes. 

:meth:`add_code()` takes the names of the Datavyu codes you are adding
as its parameters. This example adds a code
called *unit* to the "trial" Datavyu column in :download:`the sample
data </resources/Example-Template.opf>`. The *unit* code might
represent the unit of measure used during an experiment.

#. Start by setting up the script, and assigning the Datavyu column
   "trial" to a variable using :meth:`getVariable()`. You can call your
   variable whatever you want to: we're calling it ``trial`` in this
   example:

   .. code-block:: ruby

      require 'Datavyu_API.rb'
      begin
         # Retrieve "trial" data from Datavyu spreadsheet and assign it
         # to a new Ruby variable
         trial = getVariable("trial")

#. Add the *unit* code to ``trial`` using :meth:`add_code()`.
   
   .. code-block:: ruby
      
      require 'Datavyu_API.rb'
      begin
         trial = getVariable("trial")
         
         # Add the "unit" code to the trial variable
         trial.add_code("unit")

#. Write the changes back to the Datavyu spreadsheet using
   :meth:`setVariable()` and ``end`` the script:

   .. code-block:: ruby

      require 'Datavyu_API.rb'
      begin
         trial = getVariable("trial")
         trial.add_code("unit")
         
         # Write the changes back to the Datavyu spreadsheet
         setVariable(trial)
      end

.. end-content
