.. _api-add-arguments:

===========================
Add Arguments to a Variable
===========================

.. begin-content

Adding arguments to a variable is one of the most straightforward 
scriptable tasks. The Datavyu API provides the :function:`add_arg()` method
for adding arguments. 

:function:`add_arg()` takes the names of the Datavyu arguments to be
added as Strings passed as arguments. In this example, we'll add a study
variable argument called "unit" to the "trial" Datavyu variable. The
"unit" argument might represent the unit of measure used during an
experiment, for instance.

.. As you remember from your Ruby tutorial, methods are functions that are
part of classes. In this case, ``add_arg`` is a method of the
``RVariable`` class. The basic idea is that a method "belongs" to an
instance of a class, so using the above example, the ``RVariable``
``trial`` "owns" a function called ``add_arg`` that will add an argument
to its cells.

.. This somewhat confusing thing is probably most easily seen in an example:

#. Start by setting up the script, and assigning the Datavyu variable
   "trial" to a new Ruby variable called ``trial`` using 
   :function:`getVariable`:

   .. code-block:: ruby

      require 'Datavyu_API.rb'
      begin
         trial = getVariable("trial")

#. Add an argument to ``trial`` using :function:`add_arg`.
   
   .. code-block:: ruby
      
      require 'Datavyu_API.rb'
      begin
         trial = getVariable("trial")
         
         # Add the "unit" argument to the trial Ruby variable
         trial.add_arg("unit")

#. Write the changes back to the Datavyu database using
   :function:`setVariable` and ``end`` the script:

   .. code-block:: ruby

      require 'Datavyu_API.rb'
      begin
         trial = getVariable("trial")
         trial.add_arg("unit")
         
         # Write the changes back to the Datavyu database
         setVariable(trial)
      end

.. Put together, the script should resemble the following:

.. .. code-block:: ruby

..   require 'Datavyu_API.rb'
     begin
      # Assign the Datavyu variable "trial" data to a new Ruby variable
      # called trial.
      trial = getVariable("trial")
      # Add "unit" argument        
      trial.add_arg("unit")
      # Now we have to write back our changes
      setVariable(trial)
     end

.. end-content
