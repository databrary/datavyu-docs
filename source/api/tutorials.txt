=============
API Tutorials
=============

.. default-domain:: rb

Before You Start
################

Sample Data
-----------

Most of the following tutorials use :download:`Example-Template.opf
</resources/Example-Template.opf>` as their basic data file. 

The example template contains two :term:`columns <column>`: "id",
whose codes describe basic information such as subject number,
test date, birth date, and condition, and "trial", which has two
codes: *trialnum* and *outcome*.

The example has one :term:`cell` in the "id" column, and no cells
in the "trial" column. Most of the Datavyu tutorials use the example
template as their basis, so if you want to follow along directly,
you can download it, and then open it with Datavyu (using File >
Open and selecting the file from your hard drive).

Most Datavyu scripts begin by loading a column from Datavyu using the
:meth:`getColumn()` method. Before moving on to the larger tutorial
list, you should familiarize yourself with loading Datavyu columns.

.. begin-content

Load Datavyu Columns
--------------------

To load columns, Datavyu provides the
:meth:`getColumn()` method. :meth:`getColumn()` takes one
argument: the name of the column in Datavyu, and returns the Ruby
representation of the column, which you can work with.

The following script retrieves the "trial" column from the Datavyu
spreadsheet and assigns it to an :class:`RColumn` object called ``trial``.

.. code-block:: ruby

   require 'Datavyu_API.rb'
   begin
      # Assign the Datavyu column "trial" data to a new Ruby object called trial.
     
      trial = getColumn("trial")
   end

The left side of the method call is the name of the Ruby object;
the "trial" in the parentheses is the argument passed to
:meth:`getColumn` (the name of the Datavyu column).

.. image:: /img/method-call-explanation.png
   :alt: mapping of trial = getColumn("trial") to its components
   :align: center
   :width: 500px

.. end-content

Now that you're familiar with the sample data and know how to acquire
data from Datavyu, you're ready to start scripting. The following
tutorials will guide you through common tasks. If you would prefer, you
can go through the full tutorial from start to finish in
:doc:`/api/tutorial`.

.. _api-tutorials:

Tutorials
#########

:ref:`add_a_new_column`
-------------------
Add a column to create a new coding pass or a new set of codes.


:ref:`add_codes_to_a_column`
-------------------
Add codes to a column to prompt coders which behaviors to score.

:ref:`add_cells_to_a_column`
-------------------
Add cells to a column while coding or annotating a video file.

:ref:`check_for_coding_errors`
-------------------
Check for coding errors such as typos, impossible vlaues, unlikely values, etc.

:ref:`check_inter-rater_reliability_to_improve_data_accuracy`
-------------------
Check Inter-rater Reliability to Improve Data Accuracy 
to determine whether more than one coder would score the data the same way.

:ref:`use_scripts_to_export_data_from_datayu`
-------------------
Use scripts to export data from Datavyu into a text file or a spreadsheet.
for statistical analyses. 

:ref:`convert_an_openshapa_script_to_the_datavui_format`
-------------------
Convert an OpenSHAPA script to the Datavyu format to update an old file.

:ref:`batch_operations_on_multiple_files`
-------------------
Batch operations on multiple files to do the same operation on more than one file.

:ref:`conver_macshapa_files_to_work_in_datavyu`
-------------------
Convert MacSHAPA files to work in Datavyu so that you can use the new, supported software. 

.. toctree::
   :titlesonly:

   /api/tutorials/add-a-new-column   
   /api/tutorials/add-codes-to-a-column
   /api/tutorials/add-cells-to-a-column
   /api/tutorials/check-for-coding-errors
   /api/tutorials/use-reliability-coding-to-check-data-accuracy
   /api/tutorials/export-data-using-scripts 
   /api/tutorials/convert-openshapa-script-to-datavyu
   /api/tutorials/perform-operations-on-multiple-files
   /api/tutorials/convert-macshapa-to-datavyu
