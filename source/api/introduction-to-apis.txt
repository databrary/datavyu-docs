====================
Introduction to APIs
====================

.. default-domain:: rb

APIs, Application Program Interfaces, are collections of code that
specify how software components communicate with each other. APIs are
incredibly prevalent tools: when you log into a website using your
Facebook or Google credentials, a web API helps that website
communicate with Facebook or Google's servers. Similarly, when you
use a piece of Windows software, its programmers likely used the
Windows API to communicate with Windows itself and access drivers,
printers, and the user interface.

.. figure:: /img/api-explanatory-diagram.png
   :align: center

   This image needs to be replaced with something betterer.

The Datavyu API works somewhat differently: instead of helping two
applications communicate, it helps users to perform tasks
programmatically, altering their Datavyu spreadsheets
using :term:`scripts <script>`.

Suppose you had a ten minute video data source. Perhaps it showed a
series of one-minute  repeated trials with a single participant.
The first trial, then, would start at 00:00:00, the second
at 00:01:00, and so on, up to the 10th trial at 00:09:00. You might
want to create a "trial" column, where you would code each trial's
metadata, with its :term:`onset` at the minute mark, and its offset
just prior. Manually creating ten (largely blank) cells would be
time-consuming, and not a particularly good use of a researcher's
time. If you had fifty participants, and therefore fifty similar
videos, it would be an even worse use of the researcher's time.

Computers are ideally suited for doing repetitive tasks quickly. The
Datavyu API can enable a researcher to perform these kinds of tasks
programmatically, so that creating sixty cells and setting their
onsets becomes a matter of writing a few lines of code and running the
script.

The Datavyu API provides ways to check a coder's work, create columns,
export data, and update columns, cells, and codes, to name a few.
Writing scripts with the API is straightforward and accessible to even
a novice programmer. The ability to use scripts to automate tasks greatly
increases the ways that Datavyu can facilitate data collection and
analysis, and is well worth traversing the initial learning curve.

Ruby and You
------------

Ruby is a programming language that has become particularly popular over
the last decade. For a
good introduction to Ruby, consider going through the 
`Ruby in Twenty Minutes <https://www.ruby-lang.org/en/documentation/quickstart/>`_
tutorial, which provides a quick overview to working in Ruby.

You do not need to be an experienced programmer – or even to really
understand the ins and outs of Ruby – to be able to write scripts with
the Datavyu API. Following the :doc:`API tutorials </api/tutorials>`
is a good way to become familiar with scripting for Datavyu. With some
practice, and you will likely be able to customize the sample scripts
for your own purposes. However, gaining a grounding in some
programming concepts will make it easier to create your own scripts
for your unique use cases and needs.

Consider :doc:`/api/overview` for an introduction to object oriented
programming, :term:`classes <class>`, and :term:`methods <method>`.
Also, :doc:`/api/introduction-to-scripting` discusses the
requirements you should keep in mind when you start writing scripts.
