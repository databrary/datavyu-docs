============
new_column()
============

.. default-domain:: py

.. function:: new_column(name, *codes)


   Creates a new blank column with the specified name and codes.

   .. table-start

   .. tabularcolumns:: |l|L|L|

   .. list-table::
      :widths: 20, 40, 50
      :header-rows: 1

      * - Parameter
        - Type
        - Description
      * - ``name``
        - String
        - The name of the new column
      * - ``codes``
        - comma separated Strings
        - Codes that the new column will contain.

   .. note::

      :meth:`new_column()` creates the onset, offset, and ordinal
      codes by default. You do not need to specify them in the ``codes``.

   .. table-end

   .. admonition:: Returns

      Ruby object representation of the new column in Datavyu.

   .. admonition:: Example

      The following example creates a new Datavyu column called "trial" with
      the codes "trialnum" and "unit", and assigns them to an
      :class:`RColumn` object called ``trial``. It then adds a new cell to ``trial`` using
      :meth:`new_cell` and writes the changes back to the Datavyu
      spreadsheet using :meth:`set_column`.

      .. code-block:: ruby

         require 'Datavyu_API.rb'
         begin
            trial = new_column('trial', 'trialnum', 'unit')
            trial.new_cell()
            set_column(trial)
         end
