=================
getCellFromTime()
=================

.. default-domain:: rb

.. method:: getCellFromTime(col, time)

   Identifies the cell that occurs at a given point in time for the
   specified column, and returns it.
   
   .. table-start
   
   .. list-table::
      :widths: 20, 40, 50
      :header-rows: 1
      
      * - Parameter
        - Type
        - Description
      * - ``col``
        - String or RColumn object
        - Name or Ruby representation of the column that you are
          looking for a cell within.
      * - ``time``
        - Integer
        - Time (in milliseconds) that you want to identify the cell
          that happens then.

   .. table-end
   
   .. admonition:: Returns
   
      Returns the Ruby representation of the cell at the specified
      point in time, or, if there is no cell at that point in time,
      Nil.

   .. admonition:: Example
   
      The following example identifies the cell that occurs at 100ms
      in the "trial" column, and assigns it to a :class:`RCell` object.
      It then prints out the cell's ordinal, onset, and offset codes
      for easy location.

      .. code-block:: ruby
         
         require 'Datavyu_API.rb'
         begin
            trial = getColumn("trial")
            cell = getCellFromTime(trial, 100)

            # Get the ordinal, onset, offset
            # values from the cell, and assign them to
            # string variables, so we can print them out
            ordinal = cell.ordinal.to_s
            onset = cell.onset.to_s
            offset = cell.offset.to_s

            # Print out ordinal, onset, and offset, and their values
            puts "ordinal: #{ordinal}"
            puts "onset: #{onset}ms"
            puts "offset: #{offset}ms"

         end

           
